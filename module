module booth(z,x,y,clk,start);
    input [15:0]x,y;
    input start,clk;
    output reg [31:0]z;
    reg [15:0]count;
    reg [15:0]a,m,q;
    reg qm;
    parameter s0=3'b000,s1=3'b001,s2=3'b010,s3=3'b011,s4=3'b100;
    reg [2:0]state;
    
    always @(posedge clk)
        case(state)
            s0:begin
                if(start==1)
                    state=s1;
               end
            s1:begin
                    a=0;m=x;q=y;count=16;qm=0;
                    state=s2;
                end
            s2:begin
                if({q[0],qm}==2'b01)
                begin
                    a=a+m;
                    state=s3;
                end
                else if({q[0],qm}==2'b10)
                begin
                    a=a-m;
                    state=s3;
                end            
                
                else
                    state=s3;
                end
            s3:begin
                {a,q,qm}={a[15],a,q};
                count=count-1;
                if(count!=0)
                    state=s2;
                else
                    state=s4;
               end
            s4:begin
                z[31:16]=a;
                z[15:0]=q;
               end
            default:state=s0;
         endcase
                    
                   
    
endmodule
